#cloud-config
package_update: true
packages:
  - docker.io
  - python3-pip
  - curl
  - jq

write_files:
  - path: /opt/benchmark/Dockerfile
    content: |
      FROM python:3.11-slim
      RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*
      RUN pip install --no-cache-dir aiohttp
      WORKDIR /app
      COPY simple_benchmark.py /app/test/simple_benchmark.py
      CMD ["python3", "/app/test/simple_benchmark.py"]
  
  - path: /opt/benchmark/simple_benchmark.py
    encoding: b64
    content: IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwppbXBvcnQgYXN5bmNpbwppbXBvcnQgYWlvaHR0cAppbXBvcnQgdGltZQppbXBvcnQgc3lzCmltcG9ydCBqc29uCmltcG9ydCBvcwoKYXN5bmMgZGVmIG1ha2VfcmVxdWVzdChzZXNzaW9uLCB1cmwsIGRhdGEpOgogICAgc3RhcnQgPSB0aW1lLnBlcmZfY291bnRlcigpCiAgICB0cnk6CiAgICAgICAgYXN5bmMgd2l0aCBzZXNzaW9uLnBvc3QodXJsLCBqc29uPWRhdGEpIGFzIHJlc3A6CiAgICAgICAgICAgIGF3YWl0IHJlc3AudGV4dCgpCiAgICAgICAgICAgIHJldHVybiB0aW1lLnBlcmZfY291bnRlcigpIC0gc3RhcnQsIHJlc3Auc3RhdHVzID09IDIwMAogICAgZXhjZXB0OgogICAgICAgIHJldHVybiB0aW1lLnBlcmZfY291bnRlcigpIC0gc3RhcnQsIEZhbHNlCgphc3luYyBkZWYgZ2V0X3NhbXBsZV9tZXNzYWdlKHNlc3Npb24pOgogICAgYmFzZV91cmwgPSBvcy5lbnZpcm9uLmdldCgnUkVGUkFNRV9VUkwnLCAnaHR0cDovL2xvY2FsaG9zdDozMDAwJykKICAgIHRyeToKICAgICAgICBhc3luYyB3aXRoIHNlc3Npb24ucG9zdChmIntiYXNlX3VybH0vZ2VuZXJhdGUvc2FtcGxlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBqc29uPXsibWVzc2FnZV90eXBlIjogIk1UMTAzIiwgImNvbmZpZyI6IHsic2NlbmFyaW8iOiAic3RhbmRhcmQifX0pIGFzIHJlc3A6CiAgICAgICAgICAgIGlmIHJlc3Auc3RhdHVzID09IDIwMDoKICAgICAgICAgICAgICAgIHJlc3VsdCA9IGF3YWl0IHJlc3AuanNvbigpCiAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgICJtZXNzYWdlIjogcmVzdWx0LmdldCgicmVzdWx0IiwgcmVzdWx0LmdldCgibWVzc2FnZSIsICIiKSksCiAgICAgICAgICAgICAgICAgICAgIm9wdGlvbnMiOiB7InZhbGlkYXRpb24iOiBGYWxzZX0KICAgICAgICAgICAgICAgIH0KICAgIGV4Y2VwdDoKICAgICAgICBwYXNzCiAgICAKICAgIHJldHVybiB7CiAgICAgICAgIm1lc3NhZ2UiOiAiezE6RjAxQkFOS0JFQkJBWFhYMDIzNzIwNTIxNX17MjpPMTAzMDgwOTA3QkFOS0ZSUFBBWFhYMDIzNzIwNTIxNTA4MDkwNzA5MTdOfXszOnsxMDg6SUxPVkVTRVBBfX17NDpcbjoyMDpSRUYxMjM0NTY3ODkwMTIzNFxuOjIzQjpDUkVEXG46MzJBOjI0MDEwMUVVUjEwMDAsMDBcbjo1MEs6LzEyMzQ1Njc4OTAxMjM0NTY3ODkwXG5KT0hOIERPRVxuMTIzIE1BSU4gU1RSRUVUXG5BTllUT1dOXG46NTk6Lzk4NzY1NDMyMTA5ODc2NTQzMjEwXG5KQU5FIFNNSVRIXG40NTYgUEFSSyBBVkVOVUVcbk9USEVSQ0lUWVxuOjcxQTpTSEFcbi19IiwKICAgICAgICAib3B0aW9ucyI6IHsidmFsaWRhdGlvbiI6IEZhbHNlfQogICAgfQoKYXN5bmMgZGVmIHJ1bl90ZXN0KG51bV9yZXF1ZXN0cz0xMDAsIGNvbmN1cnJlbnQ9OCk6CiAgICBiYXNlX3VybCA9IG9zLmVudmlyb24uZ2V0KCdSRUZSQU1FX1VSTCcsICdodHRwOi8vbG9jYWxob3N0OjMwMDAnKQogICAgdXJsID0gZiJ7YmFzZV91cmx9L3RyYW5zZm9ybS9tdC10by1teCIKICAgIAogICAgYXN5bmMgd2l0aCBhaW9odHRwLkNsaWVudFNlc3Npb24oKSBhcyBzZXNzaW9uOgogICAgICAgIGRhdGEgPSBhd2FpdCBnZXRfc2FtcGxlX21lc3NhZ2Uoc2Vzc2lvbikKICAgICAgICAKICAgICAgICBmb3IgXyBpbiByYW5nZSgxMCk6CiAgICAgICAgICAgIGF3YWl0IG1ha2VfcmVxdWVzdChzZXNzaW9uLCB1cmwsIGRhdGEpCiAgICAgICAgCiAgICAgICAgc3RhcnRfdGltZSA9IHRpbWUucGVyZl9jb3VudGVyKCkKICAgICAgICBsYXRlbmNpZXMgPSBbXQogICAgICAgIHN1Y2Nlc3NlcyA9IDAKICAgICAgICAKICAgICAgICBmb3IgaSBpbiByYW5nZSgwLCBudW1fcmVxdWVzdHMsIGNvbmN1cnJlbnQpOgogICAgICAgICAgICBiYXRjaF9zaXplID0gbWluKGNvbmN1cnJlbnQsIG51bV9yZXF1ZXN0cyAtIGkpCiAgICAgICAgICAgIGJhdGNoID0gW21ha2VfcmVxdWVzdChzZXNzaW9uLCB1cmwsIGRhdGEpIGZvciBfIGluIHJhbmdlKGJhdGNoX3NpemUpXQogICAgICAgICAgICByZXN1bHRzID0gYXdhaXQgYXN5bmNpby5nYXRoZXIoKmJhdGNoKQogICAgICAgICAgICAKICAgICAgICAgICAgZm9yIGxhdGVuY3ksIHN1Y2Nlc3MgaW4gcmVzdWx0czoKICAgICAgICAgICAgICAgIGxhdGVuY2llcy5hcHBlbmQobGF0ZW5jeSkKICAgICAgICAgICAgICAgIGlmIHN1Y2Nlc3M6CiAgICAgICAgICAgICAgICAgICAgc3VjY2Vzc2VzICs9IDEKICAgICAgICAKICAgICAgICB0b3RhbF90aW1lID0gdGltZS5wZXJmX2NvdW50ZXIoKSAtIHN0YXJ0X3RpbWUKICAgICAgICBsYXRlbmNpZXMuc29ydCgpCiAgICAgICAgCiAgICAgICAgZGVmIGdldF9wZXJjZW50aWxlKGRhdGEsIHBlcmNlbnRpbGUpOgogICAgICAgICAgICBpZiBub3QgZGF0YToKICAgICAgICAgICAgICAgIHJldHVybiAwCiAgICAgICAgICAgIGluZGV4ID0gaW50KGxlbihkYXRhKSAqIHBlcmNlbnRpbGUgLyAxMDApCiAgICAgICAgICAgIGlmIGluZGV4ID49IGxlbihkYXRhKToKICAgICAgICAgICAgICAgIGluZGV4ID0gbGVuKGRhdGEpIC0gMQogICAgICAgICAgICByZXR1cm4gZGF0YVtpbmRleF0KICAgICAgICAKICAgICAgICByZXR1cm4gewogICAgICAgICAgICAnY29uZmlndXJhdGlvbic6IGYne2NvbmN1cnJlbnR9IGNvbmN1cnJlbnQnLAogICAgICAgICAgICAndG90YWxfcmVxdWVzdHMnOiBudW1fcmVxdWVzdHMsCiAgICAgICAgICAgICdzdWNjZXNzZnVsX3JlcXVlc3RzJzogc3VjY2Vzc2VzLAogICAgICAgICAgICAnc3VjY2Vzc19yYXRlJzogKHN1Y2Nlc3Nlcy9udW1fcmVxdWVzdHMpKjEwMCBpZiBudW1fcmVxdWVzdHMgPiAwIGVsc2UgMCwKICAgICAgICAgICAgJ3RvdGFsX3RpbWUnOiB0b3RhbF90aW1lLAogICAgICAgICAgICAndGhyb3VnaHB1dCc6IG51bV9yZXF1ZXN0cyAvIHRvdGFsX3RpbWUgaWYgdG90YWxfdGltZSA+IDAgZWxzZSAwLAogICAgICAgICAgICAnbGF0ZW5jeSc6IHsKICAgICAgICAgICAgICAgICdtaW4nOiBsYXRlbmNpZXNbMF0gKiAxMDAwIGlmIGxhdGVuY2llcyBlbHNlIDAsCiAgICAgICAgICAgICAgICAnYXZnJzogc3VtKGxhdGVuY2llcykgLyBsZW4obGF0ZW5jaWVzKSAqIDEwMDAgaWYgbGF0ZW5jaWVzIGVsc2UgMCwKICAgICAgICAgICAgICAgICdwNTAnOiBnZXRfcGVyY2VudGlsZShsYXRlbmNpZXMsIDUwKSAqIDEwMDAsCiAgICAgICAgICAgICAgICAncDk1JzogZ2V0X3BlcmNlbnRpbGUobGF0ZW5jaWVzLCA5NSkgKiAxMDAwLAogICAgICAgICAgICAgICAgJ3A5OSc6IGdldF9wZXJjZW50aWxlKGxhdGVuY2llcywgOTkpICogMTAwMCwKICAgICAgICAgICAgICAgICdwOTkuOSc6IGdldF9wZXJjZW50aWxlKGxhdGVuY2llcywgOTkuOSkgKiAxMDAwLAogICAgICAgICAgICAgICAgJ21heCc6IGxhdGVuY2llc1stMV0gKiAxMDAwIGlmIGxhdGVuY2llcyBlbHNlIDAKICAgICAgICAgICAgfQogICAgICAgIH0KCmFzeW5jIGRlZiBtYWluKCk6CiAgICBiYXNlX3VybCA9IG9zLmVudmlyb24uZ2V0KCdSRUZSQU1FX1VSTCcsICdodHRwOi8vbG9jYWxob3N0OjMwMDAnKQogICAgbnVtX3JlcXVlc3RzID0gaW50KG9zLmVudmlyb24uZ2V0KCdCRU5DSE1BUktfUkVRVUVTVFMnLCAnMTAwMDAwJykpCiAgICBiZW5jaG1hcmtfY29uZmlncyA9IG9zLmVudmlyb24uZ2V0KCdCRU5DSE1BUktfQ09ORklHUycsICc4LDMyLDEyOCwyNTYnKQogICAgCiAgICB0cnk6CiAgICAgICAgYXN5bmMgd2l0aCBhaW9odHRwLkNsaWVudFNlc3Npb24oKSBhcyBzZXNzaW9uOgogICAgICAgICAgICBhc3luYyB3aXRoIHNlc3Npb24uZ2V0KGYie2Jhc2VfdXJsfS9oZWFsdGgiKSBhcyByZXNwOgogICAgICAgICAgICAgICAgaWYgcmVzcC5zdGF0dXMgIT0gMjAwOgogICAgICAgICAgICAgICAgICAgIHN5cy5leGl0KDEpCiAgICBleGNlcHQ6CiAgICAgICAgc3lzLmV4aXQoMSkKICAgIAogICAgY29uY3VycmVuY3lfbGV2ZWxzID0gW2ludCh4LnN0cmlwKCkpIGZvciB4IGluIGJlbmNobWFya19jb25maWdzLnNwbGl0KCcsJyldCiAgICByZXN1bHRzID0gW10KICAgIAogICAgZm9yIGNvbmN1cnJlbnQgaW4gY29uY3VycmVuY3lfbGV2ZWxzOgogICAgICAgIHN0YXRzID0gYXdhaXQgcnVuX3Rlc3QobnVtX3JlcXVlc3RzLCBjb25jdXJyZW50KQogICAgICAgIHJlc3VsdHMuYXBwZW5kKHN0YXRzKQogICAgCiAgICBiZXN0X3Rocm91Z2hwdXQgPSBtYXgocmVzdWx0cywga2V5PWxhbWJkYSB4OiB4Wyd0aHJvdWdocHV0J10pCiAgICBiZXN0X2xhdGVuY3kgPSBtaW4ocmVzdWx0cywga2V5PWxhbWJkYSB4OiB4WydsYXRlbmN5J11bJ3A5OSddKQogICAgCiAgICBvdXRwdXQgPSB7CiAgICAgICAgJ3RpbWVzdGFtcCc6IHRpbWUuc3RyZnRpbWUoJyVZLSVtLSVkVCVIOiVNOiVTWicsIHRpbWUuZ210aW1lKCkpLAogICAgICAgICdjb25maWd1cmF0aW9uJzogewogICAgICAgICAgICAndGFyZ2V0X3VybCc6IGJhc2VfdXJsLAogICAgICAgICAgICAndG90YWxfcmVxdWVzdHMnOiBudW1fcmVxdWVzdHMsCiAgICAgICAgICAgICdjb25jdXJyZW5jeV9sZXZlbHMnOiBjb25jdXJyZW5jeV9sZXZlbHMKICAgICAgICB9LAogICAgICAgICdyZXN1bHRzJzogcmVzdWx0cywKICAgICAgICAnc3VtbWFyeSc6IHsKICAgICAgICAgICAgJ2Jlc3RfdGhyb3VnaHB1dCc6IHsKICAgICAgICAgICAgICAgICdjb25maWd1cmF0aW9uJzogYmVzdF90aHJvdWdocHV0Wydjb25maWd1cmF0aW9uJ10sCiAgICAgICAgICAgICAgICAndmFsdWUnOiBiZXN0X3Rocm91Z2hwdXRbJ3Rocm91Z2hwdXQnXQogICAgICAgICAgICB9LAogICAgICAgICAgICAnYmVzdF9wOTlfbGF0ZW5jeSc6IHsKICAgICAgICAgICAgICAgICdjb25maWd1cmF0aW9uJzogYmVzdF9sYXRlbmN5Wydjb25maWd1cmF0aW9uJ10sCiAgICAgICAgICAgICAgICAndmFsdWUnOiBiZXN0X2xhdGVuY3lbJ2xhdGVuY3knXVsncDk5J10KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KICAgIAogICAgcHJpbnQoIkpTT05fT1VUUFVUX1NUQVJUIikKICAgIHByaW50KGpzb24uZHVtcHMob3V0cHV0LCBpbmRlbnQ9MikpCiAgICBwcmludCgiSlNPTl9PVVRQVVRfRU5EIikKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBhc3luY2lvLnJ1bihtYWluKCkp

runcmd:
  - systemctl start docker
  - systemctl enable docker
  - cd /opt/benchmark && docker build -t benchmark-runner .